{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/workers/webpack.ts","webpack:///./src/usb/webusb.ts","webpack:///./src/workers/port.handler.ts","webpack:///./src/workers/test.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","WebpackWorker","Worker","super","undefined","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","webusb","navigator","usb","arduinoFilters","vendorId","productId","validBoards","matchFilter","filter","_a","_b","_c","_d","_e","_f","deviceClass","classCode","deviceSubclass","subclassCode","deviceProtocol","protocolCode","serialNumber","getPort","this","devices","filters","getDevices","matching","forEach","push","getUSBDevices","length","Error","Port","log","message","optionalParams","console","device","onReceive","onReceiveError","init","encoder","TextEncoder","decoder","TextDecoder","readLoop","transferIn","ifaze","in","status","data","error","open","configuration","selectConfiguration","interfaces","alternate","alternates","find","a","interfaceClass","clazz","num","interfaceNumber","out","endpoints","direction","endpointNumber","claimInterface","selectAlternateInterface","controlTransferOut","requestType","recipient","request","index","close","transferOut","encode","PortHandler","port","args","pollInterval","setInterval","send","command","interval","clearInterval","endsWith","connect","stopPoll","disconnect","workerInstance","self","handler","post","postMessage","buffer","parseCommand","cmd","JSON","parse","ADC","adc","chip","action","payload","values","map","v","vi","setup","type","startHandler","stopHandler","stringData","decode","cmdArr","split","shift","openPort","closePort","onmessage","event","productName","manufacturerName","join","startPoll","raw","addEventListener"],"mappings":"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","file":"test.worker.993801054e288acb06db.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","//dummy class to be exported from workers\n//however the acutal implementation is not used since worker-loader\n//handles the module\nexport class WebpackWorker extends Worker {\n    constructor() {\n        super(undefined);\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n//if electron\n//const webusb = require(\"webusb\").usb\n// else\nconst webusb = navigator.usb;\nexport function listDevices() {\n    return webusb.getDevices().then((devices) => {\n        console.log('found devices', devices);\n        return devices.map((device) => `Product ${device.productName} manufacturer ${device.manufacturerName}`);\n    });\n}\nconst arduinoFilters = [\n    { vendorId: 0x2341, productId: 0x8036 },\n    { vendorId: 0x2341, productId: 0x8037 },\n    { vendorId: 0x2341, productId: 0x804d },\n    { vendorId: 0x2341, productId: 0x804e },\n    { vendorId: 0x2341, productId: 0x804f },\n    { vendorId: 0x2341, productId: 0x8050 },\n    { vendorId: 0x2341, productId: 0x8052 },\n    { vendorId: 0x2341, productId: 0x8053 },\n    { vendorId: 0x2341, productId: 0x8054 },\n    { vendorId: 0x2341, productId: 0x8055 },\n    { vendorId: 0x2341, productId: 0x8056 },\n    { vendorId: 0x2341, productId: 0x8057 },\n    { vendorId: 0x2341, productId: 0x0042 },\n    { vendorId: 0x239a },\n];\nexport const validBoards = arduinoFilters;\nexport function matchFilter(d, filter) {\n    var _a, _b, _c, _d, _e, _f;\n    return (d.vendorId == (_a = filter.vendorId, (_a !== null && _a !== void 0 ? _a : d.vendorId)) &&\n        d.productId == (_b = filter.productId, (_b !== null && _b !== void 0 ? _b : d.productId)) &&\n        d.deviceClass == (_c = filter.classCode, (_c !== null && _c !== void 0 ? _c : d.deviceClass)) &&\n        d.deviceSubclass == (_d = filter.subclassCode, (_d !== null && _d !== void 0 ? _d : d.deviceSubclass)) &&\n        d.deviceProtocol == (_e = filter.protocolCode, (_e !== null && _e !== void 0 ? _e : d.deviceProtocol)) &&\n        d.serialNumber == (_f = filter.serialNumber, (_f !== null && _f !== void 0 ? _f : d.serialNumber)));\n}\nexport function getDeviceFilter(device) {\n    return {\n        vendorId: device.vendorId,\n        productId: device.productId,\n        classCode: device.deviceClass,\n        subclassCode: device.deviceSubclass,\n        protocolCode: device.deviceProtocol,\n        serialNumber: device.serialNumber,\n    };\n}\nexport function getUSBDevices(filters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let devices = yield webusb.getDevices();\n        const matching = [];\n        for (const filter of filters || []) {\n            devices.forEach((d) => {\n                if (matchFilter(d, filter)) {\n                    matching.push(d);\n                }\n            });\n        }\n        return matching;\n    });\n}\nexport function getPort(filter) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const devices = yield getUSBDevices([filter]);\n        if (devices.length > 1) {\n            throw new Error('Found more than one matching port for filter');\n        }\n        return new Port(devices[0]);\n    });\n}\nexport function requestPort() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const device = yield webusb.requestDevice({ filters: arduinoFilters });\n        console.log(device);\n        return new Port(device);\n    });\n}\nlet log = (message, ...optionalParams) => { };\nlog = console.log;\nexport class Port {\n    constructor(device, onReceive, onReceiveError) {\n        this.device = device;\n        this.onReceive = onReceive;\n        this.onReceiveError = onReceiveError;\n        this.init = false;\n        this.encoder = new TextEncoder();\n        this.decoder = new TextDecoder();\n    }\n    get filter() {\n        return getDeviceFilter(this.device);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const readLoop = () => {\n                this.device.transferIn(this.ifaze.in, 64).then((result) => {\n                    if (result.status === 'ok') {\n                        if (this.onReceive) {\n                            this.onReceive(result.data);\n                        }\n                    }\n                    else {\n                        console.log(result);\n                    }\n                    readLoop();\n                }, (error) => {\n                    if (this.onReceiveError) {\n                        this.onReceiveError(error);\n                    }\n                });\n            };\n            yield this.device.open();\n            if (this.device.configuration === null) {\n                yield this.device.selectConfiguration(1);\n            }\n            //0xfe = Application Specific (ex USBTMC)\n            //0x0a CDC-Data for non WebUSB enabled device\n            const soughtClass = 0xff;\n            const configurationInterfaces = this.device.configuration.interfaces;\n            configurationInterfaces.forEach(i => {\n                const alternate = i.alternates.find(a => a.interfaceClass === soughtClass);\n                if (alternate) {\n                    this.ifaze = {\n                        clazz: alternate.interfaceClass,\n                        num: i.interfaceNumber,\n                        out: alternate.endpoints.find((e) => e.direction === 'out')\n                            .endpointNumber,\n                        in: alternate.endpoints.find((e) => e.direction === 'in')\n                            .endpointNumber,\n                    };\n                }\n            });\n            if (!this.ifaze) {\n                throw new Error('Unable to find USB interface');\n            }\n            try {\n                yield this.device.claimInterface(this.ifaze.num);\n                yield this.device.selectAlternateInterface(this.ifaze.num, 0);\n                yield this.device.controlTransferOut({\n                    requestType: 'class',\n                    recipient: 'interface',\n                    request: 0x22,\n                    value: 0x01,\n                    index: this.ifaze.num,\n                });\n                this.init = true;\n                log('USB interface claimed', this.ifaze);\n            }\n            catch (error) {\n                console.log('Error claiming USB interface', error);\n            }\n            readLoop();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.init) {\n                yield this.device.controlTransferOut({\n                    requestType: 'class',\n                    recipient: 'interface',\n                    request: 0x22,\n                    value: 0x00,\n                    index: this.ifaze.num,\n                });\n                yield this.device.close();\n            }\n        });\n    }\n    send(data) {\n        if (this.init) {\n            return this.device.transferOut(this.ifaze.out, this.encoder.encode(data));\n        }\n        else {\n            log('ERROR: USB interface not claimed/initialized');\n            return Promise.resolve(null);\n        }\n    }\n}\n","export class PortHandler {\n    constructor(port) {\n        this.port = port;\n    }\n    startPoll(args) {\n        if (this.port) {\n            this.pollInterval = setInterval(() => {\n                this.port.send(args.command);\n            }, args.interval);\n        }\n    }\n    stopPoll() {\n        console.log('stopPoll');\n        if (this.pollInterval) {\n            clearInterval(this.pollInterval);\n            this.pollInterval = null;\n        }\n    }\n    raw(value) {\n        this.port.send(value.endsWith('\\r\\n') ? value : value + '\\r\\n');\n    }\n    openPort() {\n        this.port.connect();\n    }\n    closePort() {\n        console.log('closePort');\n        this.stopPoll();\n        if (this.port) {\n            this.port.onReceive = null;\n            this.port.disconnect().then(() => { }, error => {\n                console.log('error on disconnect', error);\n            });\n            this.port = null;\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n//import { SocketMessageBroker } from '@kmx/backend/socket/socket.message.broker'\nimport { WebpackWorker } from './webpack';\nimport { listDevices, getPort, validBoards, matchFilter } from '../usb/webusb';\nimport { PortHandler as RequestHandler } from './port.handler';\nconst workerInstance = self;\nlet handler;\nfunction post(data) {\n    workerInstance.postMessage(data);\n}\nlet buffer = '';\nfunction parseCommand(command) {\n    try {\n        const cmd = JSON.parse(command);\n        //console.log(command)\n        if (cmd.ADC) {\n            const adc = cmd;\n            for (const chip of adc.ADC) {\n                if (chip.error) {\n                    post({ action: 'error', payload: adc });\n                    return;\n                }\n                chip.values = chip.values.map((v, vi) => {\n                    const biasedValue = (v & 0xff00) >> 8;\n                    const value = (v & 0x00ff);\n                    const biasedVoltageDiff = (5 * (biasedValue - value)) / 0xff;\n                    if (biasedVoltageDiff > 0.4) // this is the different between unbiased and biased voltage\n                     {\n                        return -v;\n                    }\n                    else {\n                        return (5 * value) / 0xff;\n                    }\n                });\n            }\n            //A reasonable floating value is -0xe012\n            //We can hardwire a specific port like this. if needed\n            //Should be made possible by config.\n            //adc.ADC[7].values[0] = -0xe012\n            post({ action: 'adc', payload: adc });\n        }\n        else if (cmd.setup) {\n            //Use different action \n            post({ action: 'log', payload: cmd });\n        }\n        else if (cmd.type) {\n            post({ action: 'type', payload: cmd });\n        }\n        else {\n            post({ action: 'log', payload: cmd });\n        }\n    }\n    catch (error) {\n        //console.log(\"Failed to parse command: \", command)\n        post({ action: 'error', payload: { command, error } });\n    }\n}\nfunction startHandler(filter) {\n    return __awaiter(this, void 0, void 0, function* () {\n        buffer = '';\n        if (handler) {\n            stopHandler();\n        }\n        const port = yield getPort(filter);\n        port.onReceive = (data) => {\n            const stringData = new TextDecoder().decode(data);\n            const cmdArr = stringData.split(\"\\u0003\"); //3 = ETX\n            if (cmdArr.length > 1) {\n                do {\n                    const cmd = cmdArr.shift();\n                    //console.log({cmd, cmdArr})\n                    const command = buffer + cmd;\n                    buffer = ''; //reset buffer for next command\n                    if (command.length > 0) {\n                        parseCommand(command);\n                    }\n                } while (cmdArr.length > 0);\n            }\n            else {\n                buffer += stringData;\n                //console.log(stringData)\n            }\n        };\n        port.onReceiveError = e => {\n            console.log(e);\n            stopHandler();\n        };\n        handler = new RequestHandler(port);\n        handler.openPort();\n        post({ action: 'port-opened', filter: port.filter });\n    });\n}\nfunction stopHandler() {\n    if (handler) {\n        handler.closePort();\n        handler = null;\n    }\n    post({ action: 'port-closed' });\n}\nworkerInstance.onmessage = function (event) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function* () {\n        const request = event.data;\n        switch (request.action) {\n            // Open the device specified with vendorId and productId.\n            case 'enumerate':\n                workerInstance.postMessage((yield listDevices()).join('\\n'));\n                break;\n            case 'open-port':\n                startHandler(request.filter);\n                break;\n            case 'close-port':\n                stopHandler();\n                break;\n            case 'start-poll':\n                (_a = handler) === null || _a === void 0 ? void 0 : _a.startPoll(request);\n                break;\n            case 'stop-poll':\n                (_b = handler) === null || _b === void 0 ? void 0 : _b.stopPoll();\n                break;\n            case 'raw':\n                (_c = handler) === null || _c === void 0 ? void 0 : _c.raw(request.value);\n                break;\n        }\n    });\n};\npost({ action: 'worker-ready' });\nnavigator.usb.addEventListener('disconnect', event => {\n    // console.log(event)\n    stopHandler();\n});\nnavigator.usb.addEventListener('connect', event => {\n    // console.log(event)\n    for (const filter of validBoards) {\n        if (matchFilter(event.device, filter)) {\n            startHandler(filter);\n        }\n    }\n});\n//Trick tsc and webpack to work together\nexport default WebpackWorker;\n"],"sourceRoot":""}